<UserControl
    x:Class="SnailPass.CustomControls.CryptedFieldWithHeader"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:SnailPass.CustomControls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="root"
    mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50*" MinHeight="32" />
            <RowDefinition Height="50*" MinHeight="32" />
        </Grid.RowDefinitions>

        <Grid>
            <TextBlock
                FontFamily="{StaticResource JbmLight}"
                FontSize="18"
                Foreground="{StaticResource Color2}"
                Text="{Binding Title, ElementName=root}"
                TextAlignment="Center"
                TextWrapping="Wrap" />

            <Grid HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <Border x:Name="EditFieldButton" Grid.Column="0">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsDeletable, Mode=OneWay, RelativeSource={RelativeSource AncestorType=local:CryptedFieldWithHeader}}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="Opacity" Value="0.5" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsButtonsEnabled, Mode=OneWay, RelativeSource={RelativeSource AncestorType=local:CryptedFieldWithHeader}}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="Opacity" Value="0.5" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                    <Button
                        Name="EditButton"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Command="{Binding EditCommand, ElementName=root}"
                        Style="{StaticResource ButtonStyle3}">
                        <Border
                            Width="26"
                            Height="19"
                            Background="Transparent">
                            <Rectangle
                                Width="15"
                                Height="15"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{Binding ElementName=EditButton, Path=Foreground}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource SaveIcon}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Border>
                    </Button>
                </Border>

                <Border x:Name="BinButton" Grid.Column="1">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsDeletable, Mode=OneWay, RelativeSource={RelativeSource AncestorType=local:CryptedFieldWithHeader}}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="Opacity" Value="0.5" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsButtonsEnabled, Mode=OneWay, RelativeSource={RelativeSource AncestorType=local:CryptedFieldWithHeader}}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Setter Property="Opacity" Value="0.5" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                    <Button
                        Name="DeleteButton"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Command="{Binding DeleteCommand, ElementName=root}"
                        Style="{StaticResource ButtonStyle3}">
                        <Border
                            Width="26"
                            Height="19"
                            Background="Transparent">
                            <Rectangle
                                Width="15"
                                Height="15"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{Binding ElementName=DeleteButton, Path=Foreground}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource BinIcon}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Border>
                    </Button>
                </Border>
            </Grid>
        </Grid>


        <Border
            Grid.Row="1"
            Grid.ColumnSpan="10"
            Background="{StaticResource Color2}"
            CornerRadius="4"
            Opacity="0.03" />

        <Grid
            x:Name="CryptedValueField"
            Grid.Row="1"
            Grid.ColumnSpan="3"
            Background="Transparent"
            MouseDown="CryptedValueField_MouseDown"
            ToolTipOpening="IsCopiedTooltip_ToolTipOpening"
            ToolTipService.InitialShowDelay="0"
            ToolTipService.ShowDuration="120000">
            <Grid.ToolTip>
                <ToolTip
                    x:Name="IsCopiedTooltip"
                    Background="{StaticResource ResourceKey=MainBackground}"
                    Placement="Mouse">
                    <ToolTip.Style>
                        <Style TargetType="ToolTip">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToolTip">
                                        <Border
                                            Background="{StaticResource ResourceKey=MainBackground}"
                                            BorderBrush="{StaticResource ResourceKey=BorderColor}"
                                            BorderThickness="1"
                                            CornerRadius="5">
                                            <TextBlock x:Name="TooltipText" Margin="8">
                                                <TextBlock.Style>
                                                    <Style BasedOn="{StaticResource ResourceKey=CommonTextStyle}" TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsCopied, Mode=OneWay, RelativeSource={RelativeSource AncestorType=local:CryptedFieldWithHeader}}" Value="True">
                                                                <Setter Property="Text" Value="Copied!" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsCopied, Mode=OneWay, RelativeSource={RelativeSource AncestorType=local:CryptedFieldWithHeader}}" Value="False">
                                                                <Setter Property="Text" Value="Click to copy!" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToolTip.Style>
                </ToolTip>
            </Grid.ToolTip>

            <Grid.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard Storyboard.Target="{Binding ElementName=HintField}">
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="1"
                                To="0"
                                Duration="0:0:0" />
                        </Storyboard>
                    </BeginStoryboard>
                    <RemoveStoryboard BeginStoryboardName="ValueStoryboard" />
                    <BeginStoryboard>
                        <Storyboard Storyboard.Target="{Binding ElementName=ValueField}">
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="0:0:0" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard Storyboard.Target="{Binding ElementName=HintField}">
                            <DoubleAnimation
                                BeginTime="0:0:1"
                                Storyboard.TargetProperty="Opacity"
                                From="0"
                                To="1"
                                Duration="0:0:2" />
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard x:Name="ValueStoryboard">
                        <Storyboard Storyboard.Target="{Binding ElementName=ValueField}">
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="1"
                                To="0"
                                Duration="0:0:1" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>

            <Border
                x:Name="HintField"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
                <Border Width="auto" Height="36">
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontFamily="{StaticResource JbmLightItalic}"
                        FontSize="13"
                        FontStyle="Italic"
                        FontWeight="Light"
                        Foreground="{StaticResource Color2}"
                        Opacity="0.7"
                        Text="Hover over to reveal" />
                </Border>
            </Border>

            <Border
                x:Name="ValueField"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Opacity="0">
                <Border Width="auto" Height="35">
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontFamily="{StaticResource ResourceKey=JbmMedium}"
                        FontSize="13"
                        Foreground="{StaticResource Color2}"
                        Opacity="1"
                        Text="{Binding Value, ElementName=root}"
                        TextAlignment="Center"
                        TextWrapping="Wrap" />
                </Border>
            </Border>
        </Grid>
    </Grid>
</UserControl>
